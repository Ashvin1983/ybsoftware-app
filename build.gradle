buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.bryanlor'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

ext['springCloudVersion'] = 'Greenwich.RC2'

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.cloud:spring-cloud-starter-sleuth')
	compile('org.springframework.boot:spring-boot-starter-web')
	//compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')	
	compile('com.profesorfalken:jPowerShell:3.1.1')
	compile( 'com.jcraft:jsch:0.1.53')
	compile('mysql:mysql-connector-java');
	testImplementation('org.hsqldb:hsqldb:2.7.2:runtime');		
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('org.mybatis.spring.boot:mybatis-spring-boot-starter-test:1.3.2')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}